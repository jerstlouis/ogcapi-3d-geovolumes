<bibdata type="standard">
  <fetched>2022-05-29</fetched>
  <title type="title-main" format="text/plain" language="en" script="Latn">OGC Testbed-15: Styles API Engineering Report</title>
  <title type="main" format="text/plain" language="en" script="Latn">OGC Testbed-15: Styles API Engineering Report</title>
  <uri type="obp">http://docs.opengeospatial.org/per/19-010r2.html</uri>
  <docidentifier type="OGC" primary="true">19-010r2</docidentifier>
  <date type="published">
    <on>2019-12-12</on>
  </date>
  <contributor>
    <role type="author"/>
    <person>
      <name>
        <completename>Clemens Portele</completename>
      </name>
    </person>
  </contributor>
  <contributor>
    <role type="publisher"/>
    <organization>
      <name>Open Geospatial Consortium</name>
    </organization>
  </contributor>
  <edition>2</edition>
  <language>en</language>
  <script>Latn</script>
  <abstract format="text/plain" language="en" script="Latn">This document is a proof of concept of a draft specification of the OGC Styles Application Programming Interface (API) that defines a Web API that enables map servers and clients as well as visual style editors to manage and fetch styles.

Web APIs are software interfaces that use an architectural style that is founded on the technologies of the Web. Styles consist of symbolizing instructions that are applied by a rendering engine on features and/or coverages.

The Styles API supports several types of consumers, mainly:

Visual style editors that create, update and delete styles for datasets that are shared by other Web APIs implementing the OGC API - Features - Part 1: Core standard or the draft OGC API - Coverages or draft OGC API - Tiles specifications;

Web APIs implementing the draft OGC API - Maps specification fetch styles and render spatial data (features or coverages) on the server;

Map clients that fetch styles and render spatial data (features or coverages) on the client.

Feature data is either accessed directly or organized into spatial partitions such as a tiled data store (aka vector tiles).

The Styles API is consistent with the emerging OGC API family of standards.

The Styles API implements the conceptual model for style encodings and style metadata as documented in chapter 6 of the OGC Testbed-15: Encoding and Metadata Conceptual Model for Styles Engineering Report.

The model defines three main concepts:

The style is the main resource.

Each style is available in one or more stylesheets - the representation of a style in an encoding like OGC SLD 1.0 or Mapbox Style. Clients will use the stylesheet of a style that fits best based on the capabilities of available tools and their preferences.

For each style there is style metadata available, with general descriptive information about the style, structural information (e.g., layers and attributes), and so forth to allow users to discover and select existing styles for their data.</abstract>
  <ext>
    <doctype>engineering-report</doctype>
    <editorialgroup>
      <committee>technical</committee>
    </editorialgroup>
  </ext>
</bibdata>